project_name: aws-pkcs-process-credential
version: 2
release:
  draft: true
  github:
    owner: salrashid123
    name: aws-pkcs-process-credential
  name_template: '{{.Tag}}'
  extra_files:

builds:
  - id: aws-pkcs-process-credential
    main: ./cmd  
    goos:
      - linux
    goarch:
      - amd64
    env:
      - CGO_ENABLED=1 
    binary: aws-pkcs-process-credential
    builder: go
    tool: 'go'
    command: build
    ldflags:
      - -s -w -X main.Tag={{.Version}} -X main.Commit={{.Commit}} -X main.Date={{.Date}} -X main.builtBy=goreleaser
archives:
  - id: archive
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    formats: [ 'binary' ]
    files:
      - LICENSE*
      - README*    
      - dist/*.sig      
snapshot:
  version_template: '{{ .Version }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
dist: dist
signs:
  - cmd: gpg
    id: gpg
    artifacts: all
    output: true
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # "5D8EA7261718FE5728BA937C97341836616BF511" salrashid123@gmail.com https://keyserver.ubuntu.com/pks/lookup?search=5D8EA7261718FE5728BA937C97341836616BF511&fingerprint=on&op=index
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

env_files:
  github_token: ~/.config/goreleaser/github_token
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
github_urls:
  download: https://github.com

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
  - id: default
    cmd: syft
    env:
      - SYFT_FILE_METADATA_CATALOGER_ENABLED=true
    args:
      - $artifact
      - --file
      - $document
      - --output
      - spdx-json
    documents:
      - '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}.spdx.sbom'
    artifacts: binary
